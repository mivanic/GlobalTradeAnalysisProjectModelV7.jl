var documenterSearchIndex = {"docs":
[{"location":"#GlobalTradeAnalysisProjectModelV7","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7","text":"","category":"section"},{"location":"","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7","text":"You can also show example code:","category":"page"},{"location":"","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7","text":"using Pkg\n\nPkg.add(\"GlobalTradeAnalysisProjectModelV7\")\n","category":"page"},{"location":"","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7","text":"Modules = [GlobalTradeAnalysisProjectModelV7]\nOrder   = [:function, :type]","category":"page"},{"location":"#GlobalTradeAnalysisProjectModelV7.aggregate_data-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.aggregate_data","text":"    aggregate_data(; hData, hParameters, hSets, comMap, regMap, endMap)\n\nAggregates data, parameters and sets based on the provided mapping vectors.\n\nArgs:\n\nhData: a dictionary of GTAP data (arrays) with the names as found in HAR files\nhParameters: a dictionary of GTAP parameters (arrays) with the names as found in HAR files\nhSets: a dictionary of GTAP sets (vectors of strings) with the names as found in HAR files\ncomMap: a mapping vector (NamedVector) which provides for each element in set comm the desired aggregate name\nregMap: a mapping vector (NamedVector) which provides for each element in set reg the desired aggregate name\nendMap: a mapping vector (NamedVector) which provides for each element in set endw the desired aggregate name\n\nRetruns:\n\nA named tuple with elements hData, hParameters, hSets containing the aggregated data\n\nExample:\n\njulia (; hData, hParameters, hSets) = aggregate_data(hData=data, hParameters=parameters, hSets=sets, comMap=comMap, regMap=regMap, endMap=endMap)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.aggregate_data_legacy-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.aggregate_data_legacy","text":"    aggregate_data_legacy(; hData, hParameters, hSets, comMap, regMap, endMap)\n\nAggregates data, parameters and sets based on the provided mapping vectors while incorporating an error in aggregation found in GTAPAgg2 or FlexAgg, where three parameters (i.e., ESUBM, ESUBD and ESUBV) are aggregated globally even though they are defined as region-specific\n\nArgs:\n\nhData: a dictionary of GTAP data (arrays) with the names as found in HAR files\nhParameters: a dictionary of GTAP parameters (arrays) with the names as found in HAR files\nhSets: a dictionary of GTAP sets (vectors of strings) with the names as found in HAR files\ncomMap: a mapping vector (NamedVector) which provides for each element in set comm the desired aggregate name\nregMap: a mapping vector (NamedVector) which provides for each element in set reg the desired aggregate name\nendMap: a mapping vector (NamedVector) which provides for each element in set endw the desired aggregate name\n\nRetruns:\n\nA named tuple with elements hData, hParameters, hSets containing the aggregated data\n\nExample:\n\njulia (; hData, hParameters, hSets) = aggregate_data_legacy(hData=data, hParameters=parameters, hSets=sets, comMap=comMap, regMap=regMap, endMap=endMap)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.build_model!-Tuple{Any}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.build_model!","text":"build_model!(mc; max_iter=50, constr_viol_tol=1e-8, bound_push=1e-15)\n\nBuilds the GTAP model in the provided model container (mc) which has an empty Ipopt model. This function is not typically called by the user; instead, it is invoked by generate_initial_model(). However, if the user wishes to change the model, he or she can extend this function.\n\nArgs:\n\nmc: a model container\n\nOptional args:\n\nmax_iter: maximum number of iterations\nconstr_viol_tol: accuracy for constraint satisfaction\nbound_push: mandatory move of the starting values from constraint bounds\n\nRetruns:\n\nNothing but it modifies the mc object, adding on the existing model element\n\nExample:\n\njulia build_model!(mc)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.calculate_ev-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.calculate_ev","text":"calculate_ev(; sets, data0, data1, parameters, max_iter=50, constr_viol_tol=1e-5, bound_push=1e-15)\n\nDoc string\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.calculate_gdp-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.calculate_gdp","text":"calculate_gdp(; sets, data0, data1)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.extract_model!-Tuple{Any}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.extract_model!","text":"extract_model!(model_container)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.generate_calibration_inputs-Tuple{Any, Any}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.generate_calibration_inputs","text":"generate_calibration_inputs(model_container, start_data)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.generate_initial_model-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.generate_initial_model","text":"generate_initial_model(; hSets, hData, hParameters)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.generate_starting_values-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.generate_starting_values","text":"generate_starting_values(; hSets, hData, hParameters)\n\nDoc string here. It generates sets.\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.get_sample_data-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.get_sample_data","text":"get_sample_data()\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.initialize_model!-Tuple{Any}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.initialize_model!","text":"initialize_model!(model_container)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.run_model!-Tuple{Any}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.run_model!","text":"run_model!(; model_container, max_iter=50, constr_viol_tol=1e-8, bound_push=1e-15)\n\nRuns the model (modelcontainer.model) by executing these steps: (1) set all starting  values to those found in the data (modelcontainer.data), (2) fix all variables that are specified as exogenous (modelcontainer.fixed), (3) solve the model, (4) load all variable values to the data (modelcontainer.data)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.solve_model!-Tuple{Any}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.solve_model!","text":"solve_model!(model_container; max_iter, constr_viol_tol, bound_push)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.solve_model-Tuple{}","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.solve_model","text":"solve_model(; sets, data, parameters, fixed, max_iter=50, constr_viol_tol=1e-8, bound_push=1e-15, model=nothing)\n\n\n\n\n\n","category":"method"},{"location":"#GlobalTradeAnalysisProjectModelV7.model_container_struct","page":"GlobalTradeAnalysisProjectModelV7","title":"GlobalTradeAnalysisProjectModelV7.model_container_struct","text":"mutable struct model_container_struct\n\nA container of all data for a model\n\n\n\n\n\n","category":"type"}]
}
